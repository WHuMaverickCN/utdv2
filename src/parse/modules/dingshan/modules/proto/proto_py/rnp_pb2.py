# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rnp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import rnp_common_pb2 as rnp__common__pb2
import seq_header_pb2 as seq__header__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\trnp.proto\x12\x03rnp\x1a\x10rnp_common.proto\x1a\x10seq_header.proto\"\x86\x01\n\x0fUTMLocalization\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12\t\n\x01x\x18\x02 \x01(\x01\x12\t\n\x01y\x18\x03 \x01(\x01\x12\x0f\n\x07heading\x18\x04 \x01(\x01\x12\x1d\n\x15reserve_utmloc_double\x18\x05 \x03(\x01\"\xe5\x03\n\x0e\x44rivingEnvInfo\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12#\n\x0c\x65go_scenario\x18\x02 \x01(\x0b\x32\r.rnp.Scenario\x12/\n\x14traffic_light_status\x18\x03 \x01(\x0b\x32\x11.rnp.TrafficLight\x12.\n\x12\x65go_ground_marking\x18\x04 \x03(\x0b\x32\x12.rnp.GroundMarking\x12*\n\x10\x65go_traffic_sign\x18\x05 \x03(\x0b\x32\x10.rnp.TrafficSign\x12-\n\x0e\x65go_pos_in_map\x18\x06 \x01(\x0b\x32\x15.rnp.EgoPositionInMap\x12\"\n\x0blegacy_info\x18\x07 \x01(\x0b\x32\r.rnp.LegacyL3\x12*\n\x0c\x65go_env_info\x18\x08 \x01(\x0b\x32\x14.rnp.EnvironmentInfo\x12&\n\x0ctraffic_flow\x18\t \x03(\x0b\x32\x10.rnp.TrafficFlow\x12$\n\x1creserve_drivingenvinfo_int32\x18\n \x03(\x05\x12%\n\x1dreserve_drivingenvinfo_double\x18\x0b \x03(\x01\"\xf0\x01\n\rIACCNIDSwitch\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12\x1a\n\x12rnp_nid_valid_flag\x18\x02 \x01(\r\x12\x15\n\rnid_iacc_flag\x18\x03 \x01(\r\x12)\n\x0enid_valid_info\x18\x04 \x01(\x0b\x32\x11.rnp.NIDValidInfo\x12\x15\n\rswitch_reason\x18\x05 \x01(\r\x12\x1c\n\x14reserve_switch_int32\x18\x06 \x03(\x05\x12\x1d\n\x15reserve_switch_double\x18\x07 \x03(\x01\"\xde\x03\n\x0c\x45\x64\x63Rendering\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12#\n\x10line_point_infos\x18\x02 \x03(\x0b\x32\t.rnp.Line\x12$\n\rline_info_equ\x18\x03 \x03(\x0b\x32\r.rnp.LineInfo\x12,\n\x10ground_mark_info\x18\x04 \x03(\x0b\x32\x12.rnp.GroundMarking\x12%\n\x0estop_line_info\x18\x05 \x03(\x0b\x32\r.rnp.StopLine\x12\'\n\x0f\x63ross_walk_line\x18\x06 \x03(\x0b\x32\x0e.rnp.TopPoints\x12(\n\x10yellow_grid_line\x18\x07 \x03(\x0b\x32\x0e.rnp.TopPoints\x12 \n\troad_face\x18\x08 \x03(\x0b\x32\r.rnp.RoadFace\x12\x10\n\x08left_ids\x18\t \x03(\x05\x12\x11\n\tright_ids\x18\n \x03(\x05\x12\x15\n\rleft_left_ids\x18\x0b \x03(\x05\x12\x17\n\x0fright_right_ids\x18\x0c \x03(\x05\x12\x19\n\x11reserve_edc_int32\x18\r \x03(\x05\x12\x1a\n\x12reserve_edc_double\x18\x0e \x03(\x01\"\xfd\x01\n\x1cReferenceLineWithConstraints\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12\x1b\n\x06header\x18\x02 \x01(\x0b\x32\x0b.rnp.Header\x12,\n\x0ereference_line\x18\x03 \x03(\x0b\x32\x14.rnp.ReferenceLineXY\x12\x18\n\x10is_get_into_iacc\x18\x04 \x01(\r\x12#\n\x1breserve_referenceline_int32\x18\x05 \x03(\x05\x12$\n\x1creserve_referenceline_double\x18\x06 \x03(\x01\"\xc2\t\n\x0fReferenceLineXY\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\nconfidence\x18\x02 \x01(\x05\x12\x0f\n\x07lane_id\x18\x03 \x01(\x04\x12-\n\x10lane_change_type\x18\x04 \x01(\x0e\x32\x13.rnp.LaneChangeType\x12\r\n\x05\x65go_s\x18\x05 \x01(\x02\x12\x1c\n\x14\x65xploration_distance\x18\x06 \x01(\x02\x12\x15\n\rego_desired_v\x18\x07 \x01(\x02\x12\x0c\n\x04\x63ost\x18\x08 \x01(\x02\x12\x10\n\x08ramp_dis\x18\t \x01(\x02\x12\x1e\n\x16to_confluence_distance\x18\n \x01(\x02\x12\x19\n\x11to_split_distance\x18\x0b \x01(\x02\x12\x17\n\x0fto_cut_distance\x18\x0c \x01(\x02\x12 \n\x18to_current_lane_end_dist\x18\r \x01(\x02\x12\x0e\n\x06stop_s\x18\x0e \x01(\x02\x12\x18\n\x10is_get_into_iacc\x18\x0f \x01(\x08\x12\x18\n\x10is_leftmost_lane\x18\x10 \x01(\x08\x12\x19\n\x11is_rightmost_lane\x18\x11 \x01(\x08\x12\x1f\n\x17is_unknown_obstacle_cut\x18\x12 \x01(\x08\x12\x15\n\ris_cross_line\x18\x13 \x01(\x08\x12\x15\n\ris_real_sense\x18\x14 \x01(\x08\x12\x1e\n\x16in_emergency_lane_flag\x18\x15 \x01(\x08\x12\x12\n\nnum_points\x18\x16 \x01(\x05\x12\x1e\n\x05point\x18\x17 \x03(\x0b\x32\x0f.rnp.UTMPoint2D\x12\x10\n\x08headings\x18\x18 \x03(\x02\x12\x0e\n\x06kappas\x18\x19 \x03(\x02\x12\x0f\n\x07\x64kappas\x18\x1a \x03(\x02\x12\x15\n\raccumulated_s\x18\x1b \x03(\x02\x12\x10\n\x08l_offset\x18\x1c \x03(\x02\x12\x11\n\tlane_id_v\x18\x1d \x03(\x04\x12\x15\n\rlane_length_v\x18\x1e \x03(\x02\x12$\n\rleft_boundary\x18\x1f \x01(\x0b\x32\r.rnp.Boundary\x12%\n\x0eright_boundary\x18  \x01(\x0b\x32\r.rnp.Boundary\x12+\n\x14left_actual_boundary\x18! \x01(\x0b\x32\r.rnp.Boundary\x12,\n\x15right_actual_boundary\x18\" \x01(\x0b\x32\r.rnp.Boundary\x12)\n\x12lane_left_boundary\x18# \x01(\x0b\x32\r.rnp.Boundary\x12*\n\x13lane_right_boundary\x18$ \x01(\x0b\x32\r.rnp.Boundary\x12/\n\x11unknown_obstacles\x18% \x03(\x0b\x32\x14.rnp.UnknownObstalce\x12\x35\n\x17single_unknown_obstacle\x18& \x01(\x0b\x32\x14.rnp.UnknownObstalce\x12\x37\n reserve_referencelinexy_boundary\x18\' \x01(\x0b\x32\r.rnp.Boundary\x12%\n\x1dreserve_referencelinexy_int32\x18( \x03(\x05\x12&\n\x1ereserve_referencelinexy_double\x18) \x03(\x01\"\xb0\x01\n\x10PredictedObjects\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12\x1c\n\x07objects\x18\x02 \x03(\x0b\x32\x0b.rnp.Object\x12(\n\rtarget_select\x18\x03 \x01(\x0b\x32\x11.rnp.TargetSelect\x12%\n\x0clane_obj_num\x18\x04 \x01(\x0b\x32\x0f.rnp.LaneObjNum\"\xac\x01\n\x11LocalLaneTopology\x12-\n\nseq_header\x18\x01 \x01(\x0b\x32\x19.SeqHeaderProto.SeqHeader\x12\x32\n\x15lane_marking_filtered\x18\x02 \x01(\x0b\x32\x13.rnp.LaneMarkingVCS\x12\x34\n\x13reconstructed_lanes\x18\x03 \x01(\x0b\x32\x17.rnp.ReconstructedLanes\"A\n\x11RnpStateSwitchRsp\x12\x12\n\ntime_stamp\x18\x01 \x01(\x01\x12\x18\n\x10rnp_sts_feedback\x18\x02 \x01(\rb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rnp_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _UTMLOCALIZATION._serialized_start=55
  _UTMLOCALIZATION._serialized_end=189
  _DRIVINGENVINFO._serialized_start=192
  _DRIVINGENVINFO._serialized_end=677
  _IACCNIDSWITCH._serialized_start=680
  _IACCNIDSWITCH._serialized_end=920
  _EDCRENDERING._serialized_start=923
  _EDCRENDERING._serialized_end=1401
  _REFERENCELINEWITHCONSTRAINTS._serialized_start=1404
  _REFERENCELINEWITHCONSTRAINTS._serialized_end=1657
  _REFERENCELINEXY._serialized_start=1660
  _REFERENCELINEXY._serialized_end=2878
  _PREDICTEDOBJECTS._serialized_start=2881
  _PREDICTEDOBJECTS._serialized_end=3057
  _LOCALLANETOPOLOGY._serialized_start=3060
  _LOCALLANETOPOLOGY._serialized_end=3232
  _RNPSTATESWITCHRSP._serialized_start=3234
  _RNPSTATESWITCHRSP._serialized_end=3299
# @@protoc_insertion_point(module_scope)
