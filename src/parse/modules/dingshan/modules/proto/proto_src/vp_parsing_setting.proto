/**
* @file     vp_parsing_setting.proto
* @author   zhangdeze
* @details  语义分割设置信息
* @date     2022-07-27
* @version  V1.0
* @copyright(C),CA,2022
**********************************************************************************
* @attention 信号注释规则：
* ///<name ：[uint],(default,min,max),[max_number],(factor,offset),description 
* ///<信号名称：[单位]、(默认值、最小值、最大值)、[repeated最大值]、（因数，偏移量）、信号描述
* ///<coordinate:  COORDINATE_SYSTEM_VEHICLE_BASE 
* ///<车辆坐标系 原点：车辆后轴 右手法则
*
* @par      修改日志：
* <table>
* <tr><th>date              <th>version             <th>author
* <tr><th>2022.7.27          <th>1.0                 <th>zhangdeze
* <table>
**********************************************************************************
*/

syntax = "proto2";
package VpParsingSettingProto;

import "vp_perception_base.proto";

/**
*@brief   颜色
*@detail  BRG颜色三通道
*/
message Color {
  ///< b: [/], (0,0,255), [/], (1,0), 颜色b通道分量
  optional uint32 b = 1;

  ///< g: [/], (0,0,255), [/], (1,0), 颜色g通道分量
  optional uint32 g = 2;

  ///< r: [/], (0,0,255), [/], (1,0), 颜色r通道分量
  optional uint32 r = 3;
}

/**
*@brief   模型信息
*@detail  当前模型信息
*/
message RuntimeModelInfo {
  ///< model_id: [/], (0,0,/), [/], (1,0), 模型编号
  optional int32 model_id = 1;
  ///< model_name: [/], (/,/,/), [/], (1,0), 模型名称
  optional string model_name = 2;
}

/**
*@brief   模型类型
*@detail  当前语义分割模型类型
*/
enum ParsingType {
  ///< 语义分割模型: [/], (/,/,/), [/], (1,0), 语义分割模型
  PARSING_TYPE_DEFAULT = 0;
  ///< 车道线分割模型: [/], (/,/,/), [/], (1,0), 车道线分割模型
  PARSING_TYPE_LANE = 1; // 车道线分割模型
  ///< 深度图分割模型: [/], (/,/,/), [/], (1,0), 深度图分割模型
  PARSING_TYPE_DEPTH = 2; // 深度图分割模型
}

/**
*@brief   模型设置
*@detail  当前语义分割模型设置信息
*/
message ParsingSetting {
  ///< header: [/], (/,/,/), [/], (1,0), 数据头
  optional VpPerceptionBaseProto.Header header = 20;

  ///< parsing_type: [/], (0,-1,3), [/], (1,0), 分割模型类别
  optional int32 parsing_type = 1;

  ///< parsing_channels: [/], (0,0,/), [/], (1,0), 分割模型通道
  optional int32 parsing_channels = 2;

  ///< channel_labels: [/], (0,0,/), [16], (1,0), 分割模型标签类别
  repeated uint64 channel_labels = 3;

  ///< channel_colors: [/], (/,/,/), [16], (1,0), 分割模型各类别对应颜色
  repeated Color channel_colors = 4;

  ///< freespace_channels: [/], (0,0,/), [16], (1,0), 可行驶区域通道
  repeated int32 freespace_channels = 5;

  ///< boundspace_channels: [/], (0,0,/), [16], (1,0), 边界区域通道
  repeated int32 boundspace_channels = 6;

  ///< parsing_roi: [/], (/,/,/), [/], (1,0), 图像感兴趣区域
  optional VpPerceptionBaseProto.Rect parsing_roi = 7;

  ///< parsing_scale: [/], (1,1,/), [/], (1,0), 图像缩放倍数
  optional float parsing_scale = 8;

  ///< model_info: [/], (/,/,/), [/], (1,0), 模型信息
  repeated RuntimeModelInfo model_info = 9;

  ///< time_stamp: [ms], (/,/,/), [/], (1,0), 时间戳
  optional int64 time_stamp = 10;

  ///< cam_id: [/], (0,0,/), [/], (1,0), 相机ID
  optional int32 cam_id = 11;

  ///< frame_id: [/], (/,/,/), [/], (1,0), 帧号
  optional int32 frame_id = 12;

  ///< categories: [/], (/,/,/), [/], (1,0), 模型输出类别
  repeated VpPerceptionBaseProto.Category categories = 13;
}
