# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vp_lane_v2.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import vp_ndm_base_v2_pb2 as vp__ndm__base__v2__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10vp_lane_v2.proto\x12\x0cVpNdmProtoV2\x1a\x14vp_ndm_base_v2.proto\"\xdc\x01\n\x08LaneAttr\x12\x16\n\tcurvature\x18\x01 \x01(\x02H\x00\x88\x01\x01\x12\x12\n\x05slope\x18\x02 \x01(\x02H\x01\x88\x01\x01\x12\x14\n\x07\x62\x61nking\x18\x03 \x01(\x02H\x02\x88\x01\x01\x12\x1a\n\rheading_angle\x18\x04 \x01(\x02H\x03\x88\x01\x01\x12\x13\n\x06offset\x18\x05 \x01(\x02H\x04\x88\x01\x01\x12\x12\n\x05width\x18\x06 \x01(\x02H\x05\x88\x01\x01\x42\x0c\n\n_curvatureB\x08\n\x06_slopeB\n\n\x08_bankingB\x10\n\x0e_heading_angleB\t\n\x07_offsetB\x08\n\x06_width\"\xaf\x02\n\x0fLaneRestriction\x12\x30\n\rvehicle_types\x18\x01 \x03(\x0b\x32\x19.VpNdmProtoV2.VehicleType\x12.\n\x0cspeed_limits\x18\x02 \x03(\x0b\x32\x18.VpNdmProtoV2.SpeedLimit\x12,\n\x0btime_limits\x18\x03 \x03(\x0b\x32\x17.VpNdmProtoV2.TimeLimit\x12\x19\n\x11lanemarking_types\x18\x04 \x03(\x05\x12\x19\n\x11trafficsign_types\x18\x05 \x03(\x05\x12\x19\n\x0cweight_limit\x18\n \x01(\x02H\x00\x88\x01\x01\x12\x19\n\x0cheight_limit\x18\x0b \x01(\x02H\x01\x88\x01\x01\x42\x0f\n\r_weight_limitB\x0f\n\r_height_limit\"\xa2\x05\n\x04Lane\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x13\n\x06str_id\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x16\n\x0el_laneline_ids\x18\x03 \x03(\t\x12\x16\n\x0er_laneline_ids\x18\x04 \x03(\t\x12\x19\n\x0c\x64riveline_id\x18\x05 \x01(\tH\x02\x88\x01\x01\x12\x33\n\tdirection\x18\x06 \x01(\x0e\x32\x1b.VpNdmProtoV2.LaneDirectionH\x03\x88\x01\x01\x12\x35\n\ntransition\x18\n \x01(\x0e\x32\x1c.VpNdmProtoV2.LaneTransitionH\x04\x88\x01\x01\x12%\n\x05\x61ttrs\x18\x0b \x03(\x0b\x32\x16.VpNdmProtoV2.LaneAttr\x12\x18\n\x0blane_length\x18\x0c \x01(\x02H\x05\x88\x01\x01\x12\x11\n\x04type\x18\r \x01(\x04H\x06\x88\x01\x01\x12 \n\x04objs\x18\x0e \x03(\x0b\x32\x12.VpNdmProtoV2.Link\x12%\n\tobstacles\x18\x0f \x03(\x0b\x32\x12.VpNdmProtoV2.Link\x12\x10\n\x08pred_ids\x18\x14 \x03(\t\x12\x10\n\x08succ_ids\x18\x15 \x03(\t\x12\x10\n\x08left_ids\x18\x16 \x03(\t\x12\x11\n\tright_ids\x18\x17 \x03(\t\x12\x33\n\x0crestrictions\x18\x1e \x03(\x0b\x32\x1d.VpNdmProtoV2.LaneRestriction\x12\x34\n\x10\x62ounding_polygon\x18\x1f \x01(\x0b\x32\x15.VpNdmProtoV2.PolygonH\x07\x88\x01\x01\x42\x05\n\x03_idB\t\n\x07_str_idB\x0f\n\r_driveline_idB\x0c\n\n_directionB\r\n\x0b_transitionB\x0e\n\x0c_lane_lengthB\x07\n\x05_typeB\x13\n\x11_bounding_polygon*\x99\x01\n\rLaneDirection\x12\x19\n\x15LaneDirection_Unknown\x10\x00\x12\x19\n\x15LaneDirection_Forward\x10\x02\x12\x1a\n\x16LaneDirection_Backward\x10\x04\x12\x1d\n\x19LaneDirection_Bidirection\x10\x08\x12\x17\n\x13LaneDirection_Tidal\x10\x10*\x83\x01\n\x0eLaneTransition\x12\x1a\n\x16LaneTransition_Unknown\x10\x00\x12\x1b\n\x17LaneTransition_Continue\x10\x02\x12\x1a\n\x16LaneTransition_Merging\x10\x04\x12\x1c\n\x18LaneTransition_Splitting\x10\x08\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'vp_lane_v2_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LANEDIRECTION._serialized_start=1263
  _LANEDIRECTION._serialized_end=1416
  _LANETRANSITION._serialized_start=1419
  _LANETRANSITION._serialized_end=1550
  _LANEATTR._serialized_start=57
  _LANEATTR._serialized_end=277
  _LANERESTRICTION._serialized_start=280
  _LANERESTRICTION._serialized_end=583
  _LANE._serialized_start=586
  _LANE._serialized_end=1260
# @@protoc_insertion_point(module_scope)
