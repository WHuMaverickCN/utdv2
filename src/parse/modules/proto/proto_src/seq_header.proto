/**
* @file     seq_header.proto
* @author   caozhengxiong
* @details  用于延时统计需要添加的头文件
* @date     2022-12-19
* @version  V1.0
* @copyright(C),changan,2050
**********************************************************************************
*
* @par      修改日志：
* <table>
* <tr><th>date              <th>version             <th>author
* <tr><th>2022.12.19        <th>1.0                 <th>caozhengxiong
* <tr><th>2023.03.30        <th>1.0                 <th>zhouyongjiang
* <table>
**********************************************************************************
*/

syntax = "proto3";
package	SeqHeaderProto;
/**
 * @brief 头文件信息
 * @detail 记录各模块输出的关键topic的帧数和时间戳信息
 */

message SeqHeader {
  ///< sab_vehicle时间戳:[s],(0,/,/),[/],(/,/),标识sab模块输出sab_vehicle信号的时间戳
  double timestamp_sab_vehicle = 1;
  ///< sab_radar时间戳:[s],(0,/,/),[/],(/,/),标识sab模块输出sab_radar信号的时间戳
  double timestamp_sab_radar = 2;
  ///< sab_lidar时间戳:[s],(0,/,/),[/],(/,/),标识sab模块输出sab_lidar信号的时间戳
  double timestamp_sab_lidar = 3;

  ///< fc_sensor时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_sensor信号的时间戳
  double timestamp_fc_sensor = 4;
  ///< fc_freespace时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_freespace信号的时间戳
  double timestamp_fc_freespace = 5;
  ///< fc_lines时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines信号的时间戳
  double timestamp_fc_lines = 6;
  ///< fc_objects时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_objects信号的时间戳
  double timestamp_fc_objects = 7;
  ///< fc_tsr时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_tsr信号的时间戳
  double timestamp_fc_tsr = 8;
  ///< fc_parsing时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_parsing信号的时间戳
  double timestamp_fc_parsing = 9;
  ///< fc_lines_tomcu时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines_tomcu信号的时间戳
  double timestamp_fc_lines_tomcu = 10;
  ///< fc_lines_curve时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines_curve信号的时间戳
  double timestamp_fc_lines_curve = 11;
  ///< fc_get_img时间戳:[s],(0,/,/),[/],(/,/),标识front camera模块获取图像的时间戳
  double timestamp_fc_getimg = 12;
  
  ///< ac_sensor时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_sensor信号的时间戳
  double timestamp_ac_sensor = 13;
  ///< ac_objects时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_objects信号的时间戳
  double timestamp_ac_objects = 14;
  ///< ac_freespace时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_freespace信号的时间戳
  double timestamp_ac_freespace = 15;
  ///< ac_lines时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_lines信号的时间戳
  double timestamp_ac_lines = 16;
  ///< ac_tsr时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_tsr信号的时间戳
  double timestamp_ac_tsr = 17;
  ///< ac_parsing时间戳:[s],(0,/,/),[/],(/,/),标识around cameras模块输出ac_parsing信号的时间戳
  double timestamp_ac_parsing = 18;
  ///< ac_get_img时间戳:[s],(0,/,/),[/],(/,/),标识around camera模块获取图像的时间戳
  double timestamp_ac_getimg = 19;
  
  ///< lidar_sensor时间戳:[s],(0,/,/),[/],(/,/),标识lidar模块输出lidar_sensor信号的时间戳
  double timestamp_lidar_sensor = 20;
  ///< lidar_objects时间戳:[s],(0,/,/),[/],(/,/),标识lidar模块输出lidar_objects信号的时间戳
  double timestamp_lidar_objects = 21;
  ///< lidar_freespace时间戳:[s],(0,/,/),[/],(/,/),标识lidar模块输出lidar_freespace信号的时间戳
  double timestamp_lidar_freespace = 22;

  ///< fus_objects时间戳:[s],(0,/,/),[/],(/,/),标识fusion模块输出fus_objects信号的时间戳
  double timestamp_fus_objects = 23; 
  ///< fus_freespace时间戳:[s],(0,/,/),[/],(/,/),标识fusion模块输出fus_freespace信号的时间戳
  double timestamp_fus_freespace = 24;

  ///< map_staticinfo时间戳:[s],(0,/,/),[/],(/,/),标识map模块输出map_staticinfo信号的时间戳
  double timestamp_map_staticinfo = 25;

  ///< insparser_insdata时间戳:[s],(0,/,/),[/],(/,/),标识loc模块输出insparser_insdata信号的时间戳
  double timestamp_insparser_insdata = 26;
  ///< du_insdata时间戳:[s],(0,/,/),[/],(/,/),标识loc模块输出du_insdata信号的时间戳
  double timestamp_du_insdata = 27;
  ///< kalmanfilter_odometry时间戳:[s],(0,/,/),[/],(/,/),标识loc模块输出kalmanfilter_odometry信号的时间戳
  double timestamp_kalmanfilter_odometry = 28;

  ///< sts_statemachine时间戳:[s],(0,/,/),[/],(/,/),标识sts模块输出sts_statemachine信号的时间戳
  double timestamp_sts_statemachine = 29;
  
  ///< rnp_objects时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_UTMLocalization信号的时间戳
  double timestamp_rnp_utmlocalization = 30;
  ///< rnp_traffic时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_DrivingEnvInfo信号的时间戳
  double timestamp_rnp_drivingenvinfo = 31;
  ///< rnp_env时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_IACCNIDSwitch信号的时间戳
  double timestamp_rnp_iaccnidswitch = 32;
  ///< rnp_ego时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_EdcRendering信号的时间戳
  double timestamp_rnp_edcrendering = 33;
  ///< rnp_ego时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_ReferenceLineWithConstraints信号的时间戳
  double timestamp_rnp_referencelinewithconstraints = 34;
  ///< rnp_ego时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_PredictedObjects信号的时间戳
  double timestamp_rnp_predictedobjects = 35;
  ///< rnp_ego时间戳:[s],(0,/,/),[/],(/,/),标识rnp模块输出rnp_LocalLaneTopology信号的时间戳
  double timestamp_rnp_locallanetopology = 36;

  ///< dnp_dnp时间戳:[s],(0,/,/),[/],(/,/),标识dnp模块输出dnp_dnp信号的时间戳
  double timestamp_dnp_dnp = 37;
  ///< dnp_latcontrolpre时间戳:[s],(0,/,/),[/],(/,/),标识dnp模块输出dnp_latcontrolpre信号的时间戳
  double timestamp_dnp_latcontrolpre = 38;
  ///< dnp_loncontrolpre时间戳:[s],(0,/,/),[/],(/,/),标识dnp模块输出dnp_loncontrolpre信号的时间戳
  double timestamp_dnp_loncontrolpre = 39;
  ///< sab_vehicle帧数:[帧],(0,/,/),[/],(/,/),标识sab模块输出sab_vehicle信号的帧数
  uint32 seq_sab_vehicle = 40;
  ///< sab_radar帧数:[帧],(0,/,/),[/],(/,/),标识sab模块输出sab_radar信号的帧数
  uint32 seq_sab_radar = 41;
  ///< sab_lidar帧数:[帧],(0,/,/),[/],(/,/),标识sab模块输出sab_lidar信号的帧数
  uint32 seq_sab_lidar = 42;

  ///< fc_sensor帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_sensor信号的帧数
  uint32 seq_fc_sensor = 43;
  ///< fc_freespace帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_freespace信号的帧数
  uint32 seq_fc_freespace = 44;
  ///< fc_lines帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines信号的帧数
  uint32 seq_fc_lines = 45;
  ///< fc_lines_tomcu帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines_tomcu信号的帧数
  uint32 seq_fc_lines_tomcu = 46;
  ///< fc_lines_curve帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_lines_curve信号的帧数
  uint32 seq_fc_lines_curve = 47;
  ///< fc_objects帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_objects信号的帧数
  uint32 seq_fc_objects = 48;
  ///< fc_tsr帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_tsr信号的帧数
  uint32 seq_fc_tsr = 49;
  ///< fc_parsing帧数:[帧],(0,/,/),[/],(/,/),标识front camera模块输出fc_parsing信号的帧数
  uint32 seq_fc_parsing = 50;

  ///< ac_sensor帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出ac_sensor信号的帧数
  uint32 seq_ac_sensor = 51;
  ///< ac_objects帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出ac_objects信号的帧数
  uint32 seq_ac_objects = 52;
  ///< ac_freespace帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出ac_freespace信号的帧数
  uint32 seq_ac_freespace = 53;
  ///< ac_lines帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出ac_lines信号的帧数
  uint32 seq_ac_lines = 54;
  ///< ac_tsr帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出ac_tsr信号的帧数
  uint32 seq_ac_tsr = 55;
  ///< fc_parsing帧数:[帧],(0,/,/),[/],(/,/),标识around cameras模块输出fc_parsing信号的帧数
  uint32 seq_ac_parsing = 56;
 
  ///< lidar_sensor帧数:[帧],(0,/,/),[/],(/,/),标识lidar模块输出lidar_sensor信号的帧数
  uint32 seq_lidar_sensor = 57;
  ///< lidar_objects帧数:[帧],(0,/,/),[/],(/,/),标识lidar模块输出lidar_objects信号的帧数
  uint32 seq_lidar_objects = 58;
  ///< lidar_freespace帧数:[帧],(0,/,/),[/],(/,/),标识lidar模块输出lidar_freespace信号的帧数
  uint32 seq_lidar_freespace = 59;

  ///< fus_objects帧数:[帧],(0,/,/),[/],(/,/),标识fus模块输出fus_objects信号的帧数
  uint32 seq_fus_objects = 60;
  ///< fus_freespace帧数:[帧],(0,/,/),[/],(/,/),标识fus模块输出fus_freespace信号的帧数  
  uint32 seq_fus_freespace = 61;

  ///< fus_freespace帧数:[帧],(0,/,/),[/],(/,/),标识fus模块输出fus_freespace信号的帧数  
  uint32 seq_map_staticinfo = 62;

  ///< insparser_insdata帧数:[帧],(0,/,/),[/],(/,/),标识loc模块输出insparser_insdata信号的帧数  
  uint32 seq_insparser_insdata = 63;
  ///< du_insdata帧数:[帧],(0,/,/),[/],(/,/),标识loc模块输出du_insdata信号的帧数  
  uint32 seq_du_insdata = 64;
  ///< kalmanfilter_odometry帧数:[帧],(0,/,/),[/],(/,/),标识loc模块输出kalmanfilter_odometry信号的帧数  
  uint32 seq_kalmanfilter_odometry = 65;

  ///< sts_statemachine帧数:[帧],(0,/,/),[/],(/,/),标识sts模块输出sts_statemachine信号的帧数
  uint32 seq_sts_statemachine = 66;
  
  ///< rnp_objects帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_UTMLocalization信号的帧数
  uint32 seq_rnp_utmlocalization = 67;
  ///< rnp_traffic帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_DrivingEnvInfo信号的帧数
  uint32 seq_rnp_drivingenvinfo = 68;
  ///< rnp_env帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_IACCNIDSwitch信号的帧数
  uint32 seq_rnp_iaccnidswitch = 69;
  ///< rnp_ego帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_EdcRendering信号的帧数
  uint32 seq_rnp_edcrendering = 70;
  ///< rnp_ego帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_ReferenceLineWithConstraints信号的帧数
  uint32 seq_rnp_referencelinewithconstraints = 71;
  ///< rnp_ego帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_PredictedObjects信号的帧数
  uint32 seq_rnp_predictedobjects = 72;
  ///< rnp_ego帧数:[帧],(0,/,/),[/],(/,/),标识rnp模块输出rnp_LocalLaneTopology信号的帧数
  uint32 seq_rnp_locallanetopology = 73;

  ///< dnp_dnp帧数:[帧],(0,/,/),[/],(/,/),标识dnp模块输出dnp_dnp信号的帧数
  uint32 seq_dnp_dnp = 74;
  ///< dnp_latcontrolpre帧数:[帧],(0,/,/),[/],(/,/),标识dnp模块输出dnp_latcontrolpre信号的帧数
  uint32 seq_dnp_latcontrolpre = 75;
  ///< dnp_loncontrolpre帧数:[帧],(0,/,/),[/],(/,/),标识dnp模块输出dnp_loncontrolpre信号的帧数
  uint32 seq_dnp_loncontrolpre = 76;

  ///< sc_sensor时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_sensor信号的时间戳
  double timestamp_sc_sensor = 77;
  ///< sc_freespace时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_freespace信号的时间戳
  double timestamp_sc_freespace = 78;
  ///< sc_lines时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_lines信号的时间戳
  double timestamp_sc_lines = 79;
  ///< sc_objects时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_objects信号的时间戳
  double timestamp_sc_objects = 80;
  ///< sc_tsr时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_tsr信号的时间戳
  double timestamp_sc_tsr = 81;
  ///< sc_slot时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_slot信号的时间戳
  double timestamp_sc_slot = 82;
  ///< sc_seg时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块输出sc_seg信号的时间戳
  double timestamp_sc_seg = 83;
  ///< sc_get_img时间戳:[s],(0,/,/),[/],(/,/),标识side camera模块获取图像的时间戳
  double timestamp_sc_getimg = 84;

  ///< sc_sensor帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_sensor信号的帧数
  uint32 seq_sc_sensor = 85;
  ///< sc_freespace帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_freespace信号的帧数
  uint32 seq_sc_freespace = 86;
  ///< sc_lines帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_lines信号的帧数
  uint32 seq_sc_lines = 87;
  ///< sc_objects帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_objects信号的帧数
  uint32 seq_sc_objects = 88;
  ///< sc_tsr帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_tsr信号的帧数
  uint32 seq_sc_tsr = 89;
  ///< sc_slot帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_slot信号的帧数
  uint32 seq_sc_slot = 90;
  ///< sc_seg帧数:[帧],(0,/,/),[/],(/,/),标识side camera模块输出sc_seg信号的帧数
  uint32 seq_sc_seg = 91;
  ///< timestamp_control_longctrl时间戳:[s],(0,/,/),[/],(/,/),标识ctl模块输出timestamp_control_longctrl信号的时间戳
  double timestamp_control_longctrl = 92;
  ///< seq_control_longctrl帧数:[帧],(0,/,/),[/],(/,/),标识ctl模块输出seq_control_longctrl信号的帧数
  uint32 seq_control_longctrl = 93;
  ///< timestamp_control_latctrl时间戳:[s],(0,/,/),[/],(/,/),标识ctl模块输出timestamp_control_latctrl信号的时间戳
  double timestamp_control_latctrl = 94;
  ///< seq_control_latctrl帧数:[帧],(0,/,/),[/],(/,/),标识ctl模块输出seq_control_latctrl信号的帧数
  uint32 seq_control_latctrl = 95; 
  ///< timestamp uss sda时间戳:[s],(0,/,/),[/],(/,/),标识 uss sda 模块输出 timestamp_uss_sda 信号的时间戳
  double timestamp_uss_sda = 96;
  ///< seq uss sda帧数:[帧],(0,/,/),[/],(/,/),标识 uss sda 模块输出 seq uss sda 信号的帧数
  uint32 seg_uss_sda = 97;
  ///< timestamp_sas_aeb时间戳:[s],(0,/,/),[/],(/,/),标识sas模块输出timestamp_sas_aeb信号的时间戳
  double timestamp_sas_aeb = 98;
  ///< seq_sas_aeb帧数:[帧],(0,/,/),[/],(/,/),标识sas模块输出seq_sas_aeb信号的帧数
  uint32 seq_sas_aeb = 99;
  ///< timestamp_sas_aes时间戳:[s],(0,/,/),[/],(/,/),标识sas模块输出timestamp_sas_aes信号的时间戳
  double timestamp_sas_aes = 100;
  ///< seq_sas_aes帧数:[帧],(0,/,/),[/],(/,/),标识sas模块输出seq_sas_aes信号的帧数
  uint32 seq_sas_aes = 101;
}

/**
 * @brief 头文件信息
 * @detail 定义 DelayHeader ,通用的字段，各模块复用，以减少数据传输量过大的问题，比如soc到mcu
 */
message DelayHeader {
  ///< timestamp_last_output上游模块输出信号的时间戳:[s],(0,/,/),[/],(/,/),标识上游模块输出信号的时间戳
  double timestamp_last_output = 1;
  ///< timestamp_current_input本模块数据输入的时间戳:[s],(0,/,/),[/],(/,/),标识本模块数据输入的时间戳
  double timestamp_current_input = 2;
  ///< timestamp_current_output本模块输出信号的时间戳:[s],(0,/,/),[/],(/,/),标识本模块输出信号的时间戳
  double timestamp_current_output = 3;
  ///< node_last_current链路关系:[/],(/,/,/),[/],(/,/),标识链路关系，如 fc_fus，fus_rnp，rnp_dnp
  string node_last_current = 4;
  ///< timestamp_reserved预留字段:[s],(0,/,/),[/],(/,/),标识时间戳预留字段
  double timestamp_reserved = 5;
  ///< str_reserved预留字段:[s],(0,/,/),[/],(/,/),标识字符串预留字段
  string str_reserved = 6;
}
