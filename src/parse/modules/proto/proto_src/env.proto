/**

* @file     env.proto
* @author   Yifei Kang, Zhaofeng Tang
* @details  静态环境的输出接口
* @date     2024-01-22
* @version  1.0
* @copyright(C),changan,2050

**********************************************************************************
* @attention 信号注释规则：
* ///<name ：[uint],(default,min,max),[max_number],(factor,offset),description
* ///<信号名称：[单位]、(默认值、最小值、最大值)、[repeated最大值]、(因数，偏移量)、信号描述
* ///<coordinate:  COORDINATE_SYSTEM_VEHICLE_BASE
* ///<车辆坐标系 原点：车辆后轴 右手法则
*
* @par      修改日志：
* <table>
* <tr><th>date              <th>version          <th>author
* <tr><th>2024.1.22         <th>1.0             <th>Yifei Kang, Zhaofeng Tang
* <table>
**********************************************************************************

*/

syntax = "proto3";

import "env_common.proto";
import "odometry.proto";
import "idmap_common.proto";
import "seq_header.proto";
import "header.proto";

// SOP2 统一改为env
package localization;

/**
* @brief 静态环境融合信息
* @details 除特别说明，坐标基于车体坐标系，原点：车辆后轴，右手法则
*/
message EnvFusion
{
  ///< 数据头信息:[/],(/,/,/),[/],(/,/),标识数据头信息
  Header header = 1;

  ///< 定位信息：[/],(/,/,/),[/],(/,/),匹配校准后的位姿等
  ///< 坐标系：经纬度坐标（偏转后）
  Odometry position = 2;

  ///<地图状态:[/],(/,/,/),[/],(/,/),/
  MapStatus map_status = 3;

  ///<车道相关的信息:[/],(/,/,/),[20],(/,/),/
  repeated Lane lanes = 4;

  ///<车道线集合:[/],(/,/,/),[50],(/,/),/
  repeated Line lines = 5;

  ///<道路边界集合:[/],(/,/,/),[10],(/,/),/
  repeated RoadBoundary boundaries = 6;

  ///<地面标识:[/],(/,/,/),[100],(/,/),人行横道、地面箭头、停止线、文字等
  repeated GroundMarking ground_markings = 7;

  ///<交通灯信息:[/],(/,/,/),[8],(/,/),/
  repeated TrafficLight traffic_lights = 8;

  ///<交通标志牌信息:[/],(/,/,/),[16],(/,/),/
  repeated TrafficSign traffic_signs = 9;

  ///<停车位信息:[/],(/,/,/),[/],(/,/),/
  repeated ParkingSlot parking_slots = 10;

  ///<延时统计信息:[/],(/,/,/),[/],(/,/),标识上下游信号
  SeqHeaderProto.SeqHeader seq_msg = 11;
}

/**
* @brief 车道信息
* @details 车道体现在车道中心线上
*/
message Lane
{
  ///<车道id:[/],(0,0,/),[/],(1,0),车道中心线id具有唯一性
  uint64 id = 1;

  ///<车道置信度：[/],(1,0,1),[/],(0.01,0),/
  double confidence = 2;

  ///<车道通行类型:[/],(0,0,3),[/],(1,0),直行、左右转、虚拟车道等
  PassageType passage_type = 3;

  ///<车道通行方向:[/],(0,0,3),[/],(1,0),顺、逆、双向通行
  LaneDirection lane_direction = 4;

  ///<车道纵坡:[/],(0,0,/),[/],(1,0),坡度对应位置待补充
  repeated double slope = 5;

  ///<推荐速度:[kph],(0,0,/),[/],(1,0),不表示实际限速
  uint32 driver_speed = 6;

  ///<最高限速:[kph],(0,0,/),[/],(1,0),/
  uint32 speed_limit_max = 7;

  ///<最低限速:[kph],(0,0,/),[/],(1,0),/
  uint32 speed_limit_min = 8;

  ///<后继车道id:[/],(0,0,/),[/],(1,0),/
  repeated uint64 successor_lane_id = 9;

  ///<车道节点:[/],(/,/,/),[4],(/,/),/,分歧合流点等
  repeated LaneNode nodes = 10;

  ///<车道中心线形状点:[/],(/,/,/),[500],(/,/),/
  repeated LanePoint points = 11;

  ///<车道楼层:[/],(0,0,10),[/],(1,0),当前车道对应的楼层，停车场具备，不输出
  int32 floor_num = 12;

}

/**
* @brief 车道节点信息
* @details 分歧合流点等
*/
message LaneNode
{
  ///< 节点坐标:[/],(/,/,/),[/],(/,0),/
  Point point = 1;

  ///< 节点类型:[/],(0,0,99),[/],(1,0),/
  repeated idmap.LaneNodeType node_type = 2;
}

/**
* @brief 车道几何形点信息
* @details 形点坐标、关联的交通灯、可通行状态
*/
message LanePoint
{
  ///< 节点坐标:[/],(/,/,/),[/],(/,0),/
  Point point = 1;

	///< 关联的交通灯id:[/],(-1,/,/),[/],(/,0),无关联的交通灯时为-1
  int64 related_traffic_light_id = 2;

  ///< 是否可通行：[/],(/,/,/),[/],(/,0),根据交通灯状态是否可通行
  Passability passability = 3;
}

/**
* @brief 车道线相关信息
* @details 包括车道线索引、属性、轨迹点等
*/
message Line
{
  ///< 车道线id:[/],(0,0,/),[/],(1,0),/
  uint64 id = 1;

  ///< 车道线置信度：[/],(1,0,1),[/],(0.01,0),/
  double confidence = 2;

  ///< 车道线轨迹点集合:[/],(/,/,/),[400],(/,/),/
  repeated Point points = 3;

  ///< 车道线类型:[/],(0,0,99),[/],(1,0),/
  repeated idmap.LineType line_type = 4;

  ///< 车道线线型:[/],(0,0,99),[/],(1,0),/
  repeated idmap.LineMarkingType line_marking_type = 5;

  ///< 车道线颜色:[/],(0,0,8),[/],(1,0),/
  idmap.Color color = 6;
}


/**
* @brief 道路边界线相关信息
* @details 道路边界线的形点、类型
*/
message RoadBoundary
{
  ///< 道路边界线id:[/],(/,0,/),[/],(1,0),具有唯一性
  uint64 id = 1;

  ///< 道路边界置信度：[/],(1,0,1),[/],(0.01,0),/
  double confidence = 2;

  ///< 道路边界轨迹点集合:[/],(/,/,/),[100],(/,/),/
  repeated Point points = 3;

  ///< 道路边界线类型:[/],(0,0,99),[/],(1,0),/
  idmap.RoadBoundaryType boundary_type = 4;
}


/**
* @brief 地面标识
* @details 包括人行横道、停止线、减速带等信息
*/
message GroundMarking
{
  ///<地面标识id:[/],(/,/,/),[/],(1,0),/
  uint64 id = 1;

  ///<道路标识置信度：[/],(1,0,1),[/],(0.01,0),/
  double confidence = 2;

  ///<外框坐标:[/],(/,/,/),[8],(/,/),/
  repeated Point points = 3;

  ///<地面标识类型:[/],(0,0,99),[/],(1,0),/
  idmap.GroundMarkType ground_mark_type = 4;

  ///<地面标志的值:[/],(/,/,/),[/],(1,0),数字或文字
  string sign_value = 5;

  ///<颜色:[/],(/,/,/),[4],(/,/),/
  idmap.Color color = 6;

  ///<地面标识样式:[/],(0,0,99),[/],(1,0),地面箭头方向或限速,部分不输出
  idmap.GroundMarkPattern gdp_type = 7;
}


/**
* @brief 交通灯相关信息
* @details 信号灯
*/
message TrafficLight
{
  ///<交通灯id:[/],(/,/,/),[/],(1,0),/
  uint64 id = 1;

  ///<交通灯置信度:[/],(/,/,/),[/],(1,0),/
  double confidence = 2;

  ///<交通灯几何中心坐标:[/],(/,/,/),[1],(/,/),提供交通灯投射坐标
  Point position = 3;
}


/**
* @brief 交通标志牌
* @details 提供交通标志牌类型、内容等信息
*/
message TrafficSign
{
  ///<交通标志牌id:[/],(/,/,/),[/],(1,0),/
  uint64 id = 1;

  ///<交通标志牌置信度:[/],(/,/,/),[/],(1,0),/
  uint64 confidence = 2;

  ///<交通标志牌类型:[/],(0,0,256),[/],(1,0),/
  idmap.SignType sign_type = 3;

  ///<标志牌中心点坐标:[/],(/,/,/),[1],(/,/),提供标志牌中心点
  Point position = 4;

  ///<交通标志牌上面的值:[/],(/,/,/),[/],(1,0),限速和具体文字等，部分不输出
  string sign_value = 5;
}

/**
 * @brief 停车位信息
 * @details
 */
 message ParkingSlot 
 {
   ///<停车位编号:[/],(0,0,/),[/],(1,0),众包对齐地面标识id
   uint64 id = 1;
 
   ///<停车位方向:[/],(0,0,4),[/],(1,0),开口对应道路的相对方向
   SlotDirection slot_direction = 2;
 
   ///<库位四角点:[/],(0,/,/),[4],(1,0),描述一个库位的四个角点
   repeated Point corner_pts = 3;
 }