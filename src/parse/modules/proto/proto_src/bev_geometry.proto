/**
* @file     bev_geometry.proto
* @author   bev
* @details  视觉感知消息输出接口
* @date     2024-02-01
* @version  V1.0
* @copyright(C),changan,2050
**********************************************************************************
* @attention 信号注释规则：
* ///<name ：[uint],(default,min,max),[max_number],(factor,offset),description 
* ///<信号名称：[单位]、(默认值、最小值、最大值)、[repeated最大值]、（因数,偏移量）、信号描述
* ///<coordinate:  COORDINATE_SYSTEM_VEHICLE_BASE 
* ///<车辆坐标系 原点：车辆后轴 右手法则
*
* @par      修改日志：
* <table>
* <tr><th>date              <th>version             <th>author
* <tr><th>2024.02.01        <th>42                   <th>bev 
* <table>
**********************************************************************************
*/

syntax = "proto3";
package BevGeoProto;
import "bev_std.proto";

/**
 * @brief  Quaternion Type.
 * @detail 四元数类型
 */
enum QuaternionType {
  ///< halmilton
  QUATERNION_TYPE_HAMILTON = 0;
  ///< jpl
  QUATERNION_TYPE_JPL = 1;
}
/**
 * @brief  坐标位置
 * @detail 坐标位置
 */
message Point {
  ///< x坐标：[/],(0,/,/),[/],(/,/),x坐标
   double x = 1;
  
  ///< y坐标：[/],(0,/,/),[/],(/,/),y坐标
   double y = 2;
  
  ///< z坐标：[/],(0,/,/),[/],(/,/),z坐标
   double z = 3;
}
/**
 * @brief  坐标变换原点
 * @detail 坐标变换原点位置
 */
message Pose {
  ///< 坐标变换原点坐标：[/],(/,/,/),[/],(/,/),坐标变换原点坐标
   Point position = 1;

  ///< 旋转矩阵：[/],(/,/,/),[/],(/,/),旋转矩阵
   Quaternion quaternion = 2;
}
/**
 * @brief  旋转矩阵
 * @detail 旋转矩阵
 */
message Quaternion {
  
  ///< x坐标：[/],(0,/,/),[/],(/,/),x坐标
   double x = 1;
  
  ///< y坐标：[/],(0,/,/),[/],(/,/),y坐标
   double y = 2;
  
  ///< z坐标：[/],(0,/,/),[/],(/,/),z坐标
   double z = 3;
  
  ///< w坐标：[/],(0,/,/),[/],(/,/),w坐标
   double w = 4;
  
  ///< 四元数类型：[/],(0,/,/),[/],(/,/),四元数类型
   QuaternionType type = 5;
}


